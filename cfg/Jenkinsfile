def config;
node(){
 def fileId
    if ("${env.JOB_BASE_NAME}" == 'develop') {
        fileId = 'e739f5b7-27df-4f83-bd2a-7450d396412c'  // ID del archivo para la rama "develop"
    } else if ("${env.JOB_BASE_NAME}" == 'main') {
        fileId = '65047eb2-2a7d-4afc-bf15-4461e842c721'  // ID del archivo para la rama "main"
    }
    configFileProvider([configFile(fileId: fileId, targetLocation: 'config')]) {
        config = readJSON file: 'config'
    }
}
pipeline {
           agent any
			options {
				skipDefaultCheckout(true)
			}
			tools{
				maven 'maven-default'
				dockerTool 'docker'
			}
            stages {
				stage('CleanWorkspace') {
                    steps {
						cleanWs()
                    }
                }
				stage('Checkout') {
                    steps {
						checkout scm
                    }
                }
                stage('UnitTest') {
                                     steps {

                 		        sh 'mvn clean test jacoco:prepare-agent jacoco:report'

                                     }
                                     post{
                                        always{
                                            junit '**/target/surefire-reports/TEST-*.xml'
                                        }
                                     }
                                 }
                stage('Scan') {
                					steps{
                						script {
                						  scannerHome = tool 'sonarQube'
                						}
                						withSonarQubeEnv('sonarQube') {
                						  sh "${scannerHome}/bin/sonar-scanner -Dproject.settings=cfg/sonar.properties"
                						}
                					}
                				}
				/*stage('Delivery'){
					steps{
						    sh 'mvn package azure-webapp:deploy'
					}
            }*/
        }
     }